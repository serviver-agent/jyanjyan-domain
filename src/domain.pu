@startuml
/'https://github.com/little-hands/20190511-genba-ddd-hanson/blob/master/domainModel.puml '/

skinparam {
   defaultFontName defaultFontName Noto Sans CJK JP Regular
 }

skinparam packageStyle rectangle

package jyanjyan-domain {
  interface 牌 {
    牌Type 牌Type
    Area area
  }
  note left of 牌
    牌 interface を継承して具象牌を作る
  end note

  class 役 {
    List[牌]: List牌
  }
  牌 o-l- 役
  class 局
  class 点数 {
    手牌: 手牌
    ??? : ???
  }
  手牌 o-- 点数
  note left of 点数
    fixme:点数を決めるコンストラクタ引数が
    不足しているので追加する
  end note

  class 手牌  {
    手牌State: state
    Option[点数]: maybe点数
  }


  enum 手牌State {
    ノーテン
    聴牌
    テンパイ
  }
  手牌 o-l-手牌State


  enum 牌Type {
   数牌[_]
   字牌[_]
  }
  牌 *-u- 牌Type
  note left of 牌Type
    enumではなくinterface？
    牌Type: 数牌[索子[一]] のように表現したい
  end note

  enum Area {
    王牌
    山
    河[player]
    手牌[player]
  }
  牌 *-u- Area
  note left of Area
    fixme: ポン，チー，ツモ，ロンなどで
    使われた牌に関しては未実装
  end note
  ' 代数型データを表現する方法がわからん，，
  ' 最初の親が来まるまではすべての牌のAreaは山となる

  ' interface 数牌
  ' interface 字牌

  ' class 萬子
  ' class 索子
  ' class 筒子

  ' class 風牌
  ' class 三元牌


  class 一萬1 {
    牌Type 牌Type = 数牌[萬[一]]
    Area area = 山
  }
  牌 <|-- 一萬1

  ' class 二萬
  ' class 三萬
  ' class 四萬
  ' class 五萬
  ' class 六萬
  ' class 七萬
  ' class 八萬
  ' class 九萬

  ' class 一索
  ' class 二索
  ' class 三索
  ' class 四索
  ' class 五索
  ' class 六索
  ' class 七索
  ' class 八索
  ' class 九索

  ' class 一筒
  ' class 二筒
  ' class 三筒
  ' class 四筒
  ' class 五筒
  ' class 六筒
  ' class 七筒
  ' class 八筒
  ' class 九筒



  ' class 東
  ' class 南
  ' class 西
  ' class 北

  class 白4 {
    牌Type 牌Type = 字牌三元牌[白]]
    Area area = 河[player1]
  }
  牌 <|-- 白4

  ' class 發
  ' class 中

  class player
  note left of player
    playerは自らの点数と手牌を持つ
  end note

  mix_actor player1


}
@enduml
